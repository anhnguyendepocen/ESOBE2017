#!wing
#!version=6.0
##################################################################
# Wing IDE project file : User-specific branch                   #
##################################################################
[user attributes]
guimgr.overall-gui-state = {'windowing-policy': 'combined-window',
                            'windows': [{'name': 'NZ7tLnBaXW97FYbcDnYJK2vNzy'\
        'gb7SCS',
        'size-state': 'maximized',
        'type': 'dock',
        'view': {'area': 'tall',
                 'constraint': None,
                 'current_pages': [0,
                                   0],
                 'full-screen': False,
                 'notebook_display': 'normal',
                 'notebook_percent': 0.25,
                 'override_title': None,
                 'pagelist': [('project',
                               'tall',
                               0,
                               {'tree-state': {'file-sort-method': 'by name',
        'list-files-first': False,
        'tree-states': {'deep': {'expanded-nodes': [],
                                 'selected-nodes': [],
                                 'top-node': ()}},
        'tree-style': 'deep'}}),
                              ('browser',
                               'tall',
                               0,
                               {}),
                              ('snippets',
                               'tall',
                               0,
                               {}),
                              ('source-assistant',
                               'tall',
                               2,
                               {}),
                              ('debug-stack',
                               'tall',
                               1,
                               {}),
                              ('indent',
                               'tall',
                               2,
                               {})],
                 'primary_view_state': {'area': 'wide',
        'constraint': None,
        'current_pages': [3,
                          4],
        'notebook_display': 'normal',
        'notebook_percent': 0.30000000000000004,
        'override_title': None,
        'pagelist': [('batch-search',
                      'wide',
                      0,
                      {'fScope': {'fFileSetName': 'All Source Files',
                                  'fLocation': None,
                                  'fRecursive': True,
                                  'fType': 'project-files'},
                       'fSearchSpec': {'fEndPos': None,
                                       'fIncludeLinenos': True,
                                       'fInterpretBackslashes': False,
                                       'fMatchCase': False,
                                       'fOmitBinary': True,
                                       'fRegexFlags': 46,
                                       'fReplaceText': '',
                                       'fReverse': False,
                                       'fSearchText': '',
                                       'fStartPos': 0,
                                       'fStyle': 'text',
                                       'fWholeWords': False,
                                       'fWrap': True},
                       'fUIOptions': {'fAutoBackground': True,
                                      'fFilePrefix': 'short-file',
                                      'fFindAfterReplace': True,
                                      'fInSelection': False,
                                      'fIncremental': True,
                                      'fReplaceOnDisk': False,
                                      'fShowFirstMatch': False,
                                      'fShowLineno': True,
                                      'fShowReplaceWidgets': False},
                       'replace-entry-expanded': False,
                       'search-entry-expanded': False}),
                     ('interactive-search',
                      'wide',
                      0,
                      {}),
                     ('debug-data',
                      'wide',
                      0,
                      {}),
                     ('debug-exceptions',
                      'wide',
                      0,
                      {}),
                     ('debug-breakpoints',
                      'wide',
                      0,
                      {}),
                     ('testing',
                      'wide',
                      0,
                      {'added-files': [],
                       'filter': u'',
                       'recent-filters': None,
                       'sort-order': 'alpha',
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-io',
                      'wide',
                      1,
                      {}),
                     ('debug-probe',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 855L,
                       'folded-linenos': [],
                       'history': {u'file:/Users/matvi05/Dropbox/Study/DeepLearning/SGDlib.py': ['m'\
        'ultivariate_normal.logpdf(np.zeros(4), mean=0, cov=1)\n',
        'multivariate_normal.pdf(np.zeros(4), mean=np.zeros(4), cov=1)\n',
        'multivariate_normal.pdf(np.zeros(4), mean=0, cov=1)\n',
        'd  = multivariate_normal.pdf(np.zeros(4), mean=0, cov=1)\n',
        'd\n',
        'd.length\n',
        'length(d)\n',
        'd.shape\n',
        'd.shape[0]\n',
        'norm.cdf(np.dot(X,beta_))\n',
        'norm.cdf(np.dot(X,beta_)).shape\n',
        'uniform.rvs(size = n) < PrSuccess\n',
        'PrSuccess = norm.cdf(np.dot(X,beta_))\n',
        'uniform.rvs(size = n)\n',
        'uniform.rvs(size = n).shape\n',
        'y = uniform.rvs(size = n) < PrSuccess\n',
        'PrSuccess.shape\n',
        'uniform.rvs(size = (4,3))\n',
        'uniform.rvs(size = (n,1)) < PrSuccess\n',
        'y = uniform.rvs(size = (n,1)) < PrSuccess\n',
        'y.shape\n',
        'tau2.shape\n',
        'LogPost = probitLogPost(y, X, beta_, tau2 = 10)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros(beta_.shape[0]), co'\
        'v=tau2)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros(beta_.shape[0]), co'\
        'v=tau2)',
        'np.zeros(beta_.shape[0]).shape\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros(beta_.shape[0],1), '\
        'cov=tau2)\n',
        'np.zeros(beta_.shape[0],1)\n',
        'np.zeros(beta_.shape[0])\n',
        'np.zeros([beta_.shape[0],1]),shape\n',
        'np.zeros([beta_.shape[0],1])\n',
        'a = np.zeros([beta_.shape[0],1])\n',
        'a.shape\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros(3,1), cov=tau2)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([3,1]), cov=tau2)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([3]), cov=tau2)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([3,1]), cov=tau2*np'\
        '.eye(3))\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([3,1]), cov=tau2*np'\
        '.eye(3))',
        'np.eye(3)\n',
        'np.zeros([3,1]).shape\n',
        'tau2*np.eye(3).shape\n',
        'tau2*np.eye(3)\n',
        'tau2*np.eye([3,3])\n',
        'tau2*np.eye(3,3)\n',
        'np.identity\n',
        'np.eye(N=4, M=2)\n',
        'np.eye(N=4, M=2).shape\n',
        'np.eye(4,2).shape\n',
        'tau2*np.eye(3,3).shape\n',
        'type(tau2)\n',
        '10*np.eye(3,3).shape\n',
        '10.0*np.eye(3,3).shape\n',
        '(10.0)*np.eye(3,3).shape\n',
        '3*np.eye(3,3).shape\n',
        '2*np.eye(3,3)\n',
        'np.eye(3,3)\n',
        '2*np.eye(3,3).shape\n',
        'np.eye(3,3).shape\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([beta_.shape[0],1])'\
        ', cov=tau2)\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([beta_.shape[0],1])'\
        ', cov=eye(beta_.shape[0]))\n',
        'multivariate_normal.logpdf(beta_, mean=np.zeros([beta_.shape[0],1])'\
        ', cov=np.eye(beta_.shape[0]))\n',
        'np.zeros([beta_.shape[0],1]).shape\n',
        'beta_.shape\n',
        'beta_.flatten\n',
        'beta_.flatten()\n',
        'beta_.flatten().shape\n',
        'multivariate_normal.logpdf(beta_.flatten(), 0, cov=tau2)\n',
        'multivariate_normal.logpdf(beta_.flatten(), zeros(3), cov=tau2)\n',
        'np.zeros(3)\n',
        'tau2\n',
        '(X, y, beta_) = probitSimulator(n = 100, p = 3)\n',
        'X.shape\n',
        'LogPrSuccess\n',
        'LogPrSuccess = norm.logcdf(np.dot(X,beta_))\n',
        'LogLik = np.sum(y*LogPrSuccess + (1-y)*(1-LogPrSuccess))\n',
        'LogLik\n',
        'multivariate_normal.logpdf(beta_.flatten(), np.zeros(3), cov=tau2)'\
        '\n',
        'return LogLik + LogPrior\n',
        'LogPost = probitLogPost(beta_, y, X, tau2 = 10)',
        'p\n',
        'p = 3\n',
        'beta_  = norm.rvs(loc = 0, scale = 1, size = (p,1))\n',
        'beta_ = np.invert(np.cdot(X))\n',
        'beta_ = np.invert(np.dot(X))\n',
        'beta_ = np.invert(np.dot(X,X))\n',
        'np.dot(X,X)\n',
        'np.dot(np.transpose(X),X)\n',
        'np.linalg.solve(X,y)\n',
        'np.linalg.lstsqr(X,y)\n',
        'np.linalg.lstsq(X,y)\n',
        'help(np.linalg.lstsq)\n',
        'np.linalg.lstsq(X,y)[0]\n',
        'beta_ = np.linalg.lstsq(X,y)[0]\n',
        'probitLogPost(beta_, y, X, tau2 = 10)\n',
        'beta_  = norm.rvs(loc = 0, scale = 1, size = (p,1));probitLogPost(b'\
        'eta_, y, X, tau2 = 10)\n',
        'LogPost = probitLogPost(beta_, y, X, tau2 = 10)\n',
        'LogPost\n',
        'betaLS = np.linalg.lstsq(X,y)[0]\n',
        'betaLS\n',
        'beta_\n']},
                       'launch-id': None,
                       'sel-line': 865L,
                       'sel-line-start': 29169L,
                       'selection_end': 29169L,
                       'selection_start': 29169L}),
                     ('debug-watch',
                      'wide',
                      1,
                      {'node-states': [],
                       'tree-state': {'expanded-nodes': [],
                                      'selected-nodes': [],
                                      'top-node': (0,)}}),
                     ('debug-modules',
                      'wide',
                      1,
                      {}),
                     ('python-shell',
                      'wide',
                      2,
                      {'active-range': (None,
        -1,
        -1),
                       'attrib-starts': [],
                       'first-line': 11L,
                       'folded-linenos': [],
                       'history': {None: ['import time\nimport pandas as pd'\
        '\nimport numpy as np \nimport os\n',
        'from sklearn.utils import shuffle\nfrom sklearn.neural_network impo'\
        'rt MLPClassifier\n',
        "# data set version , 2011 to load the 2011 version of the data set,"\
        " 2014 for loading the 2014 version\n# any other value for loading o"\
        "ther arbitrary binary classification datasets (for which the class "\
        "label is the last column of the data set )\nDATA_SET_VER = 2014\nPE"\
        "RMUTE_DATA_FLAG = True\nEXP_TYPE = 'out_of_sample'\n# number of rou"\
        "nds that the experiment is repeated\nROUNDS_NO = 20\nTRAIN_RATIO = "\
        "2/3\nPROBABILITY_THRESHOLD = 0.5 #  a simple method to alleviate th"\
        "e class imbalance problem\n# sizes of hidden layers\nHIDDEN_LAYER_S"\
        "IZES = (10,10,10)\nACT_FUNCTION = 'relu'\n",
        'EXP_TYPE\n']},
                       'launch-id': None,
                       'sel-line': 23L,
                       'sel-line-start': 935L,
                       'selection_end': 935L,
                       'selection_start': 935L}),
                     ('bookmarks',
                      'wide',
                      1,
                      {}),
                     ('messages',
                      'wide',
                      2,
                      {}),
                     ('os-command',
                      'wide',
                      1,
                      {})],
        'primary_view_state': {'editor_states': ({'bookmarks': ([[loc('../../../../../Study/DeepLearning/SGDlib.py'),
        {'attrib-starts': [('probitLogPost',
                            17)],
         'first-line': 15L,
         'folded-linenos': [],
         'sel-line': 20L,
         'sel-line-start': 666L,
         'selection_end': 713L,
         'selection_start': 670L},
        1497381882.654799],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('primitive',
                             115),
                            ('primitive.__call__',
                             149)],
          'first-line': 142L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 6292L,
          'selection_end': 6292L,
          'selection_start': 6292L},
         1497381886.846947],
        [loc('../../../../../Study/DeepLearning/SGDlib.py'),
         {'attrib-starts': [('probitSimulator',
                             25)],
          'first-line': 22L,
          'folded-linenos': [],
          'sel-line': 28L,
          'sel-line-start': 1052L,
          'selection_end': 1106L,
          'selection_start': 1064L},
         1497382228.611719],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('primitive',
                             115),
                            ('primitive.__call__',
                             149)],
          'first-line': 142L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 6292L,
          'selection_end': 6292L,
          'selection_start': 6292L},
         1497382488.893052],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/numpy/linalg/linalg.py'),
         {'attrib-starts': [('_assertNdSquareness',
                             208)],
          'first-line': 178L,
          'folded-linenos': [],
          'sel-line': 211L,
          'sel-line-start': 6426L,
          'selection_end': 6426L,
          'selection_start': 6426L},
         1497382674.597452],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('primitive',
                             115),
                            ('primitive.__call__',
                             149)],
          'first-line': 142L,
          'folded-linenos': [],
          'sel-line': 162L,
          'sel-line-start': 6292L,
          'selection_end': 6292L,
          'selection_start': 6292L},
         1497382676.113203],
        [loc('../../../../../Study/DeepLearning/AutogradDemo.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 127L,
          'selection_start': 0L},
         1497382677.81939],
        [loc('../../../../../Study/DeepLearning/SGDlib.py'),
         {'attrib-starts': [],
          'first-line': 40L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2153L,
          'selection_end': 2249L,
          'selection_start': 2249L},
         1497383213.239578],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('forward_pass',
                             55)],
          'first-line': 28L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 2447L,
          'selection_end': 2447L,
          'selection_start': 2447L},
         1497383237.746831],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/numpy/linalg/linalg.py'),
         {'attrib-starts': [('_assertNdSquareness',
                             208)],
          'first-line': 178L,
          'folded-linenos': [],
          'sel-line': 211L,
          'sel-line-start': 6426L,
          'selection_end': 6426L,
          'selection_start': 6426L},
         1497383240.053373],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('forward_pass',
                             55)],
          'first-line': 28L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 2447L,
          'selection_end': 2447L,
          'selection_start': 2447L},
         1497383240.899386],
        [loc('../../../../../Study/DeepLearning/SGDlib.py'),
         {'attrib-starts': [],
          'first-line': 40L,
          'folded-linenos': [],
          'sel-line': 63L,
          'sel-line-start': 2153L,
          'selection_end': 2249L,
          'selection_start': 2249L},
         1497383242.26406],
        [loc('../../../../../../anaconda/lib/python3.6/site-packages/autograd/core.py'),
         {'attrib-starts': [('forward_pass',
                             55)],
          'first-line': 28L,
          'folded-linenos': [],
          'sel-line': 61L,
          'sel-line-start': 2447L,
          'selection_end': 2447L,
          'selection_start': 2447L},
         1497383243.848093],
        [loc('../../../../../Study/DeepLearning/SGDlib.py'),
         {'attrib-starts': [('gradDescent',
                             33)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 45L,
          'sel-line-start': 1609L,
          'selection_end': 1648L,
          'selection_start': 1648L},
         1508187212.997789],
        [loc('../../../../../Study/DeepLearning/AutogradDemo.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 0L,
          'sel-line-start': 0L,
          'selection_end': 127L,
          'selection_start': 0L},
         1508187213.997801],
        [loc('../../../../../Study/DeepLearning/SGDlib.py'),
         {'attrib-starts': [('probitLogPost',
                             17)],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 17L,
          'sel-line-start': 533L,
          'selection_end': 570L,
          'selection_start': 570L},
         1508588401.623404],
        [loc('../../../../../Study/DeepLearning/AutogradDemo.py'),
         {'attrib-starts': [],
          'first-line': 0L,
          'folded-linenos': [],
          'sel-line': 8L,
          'sel-line-start': 299L,
          'selection_end': 391L,
          'selection_start': 391L},
         1508588424.582358],
        [loc('../../../../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': -1,
          'viewer-state': {'history': [-1,
                                       28],
                           'history-pos': 0,
                           'index': -1,
                           'top': 0}},
         1508588424.731226],
        [loc('../../../../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         {'displayed-index': 28,
          'viewer-state': {'history': [-1,
                                       28],
                           'history-pos': 1,
                           'index': 28,
                           'top': 0}},
         1508588555.080115],
        [loc('preprocessing.py'),
         {'attrib-starts': [('categorical_to_numerical',
                             54)],
          'first-line': 85L,
          'folded-linenos': [],
          'sel-line': 72L,
          'sel-line-start': 2667L,
          'selection_end': 2667L,
          'selection_start': 2667L},
         1508589402.12266]],
        20),
        'current-loc': loc('classification.py'),
        'editor-state-list': [(loc('classification.py'),
                               {'attrib-starts': [],
                                'first-line': 0L,
                                'folded-linenos': [],
                                'sel-line': 80L,
                                'sel-line-start': 3103L,
                                'selection_end': 3154L,
                                'selection_start': 3154L}),
                              (loc('../../../../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
                               {'displayed-index': 28,
                                'viewer-state': {'history': [-1,
        28],
        'history-pos': 1,
        'index': 28,
        'top': 0}}),
                              (loc('preprocessing.py'),
                               {'attrib-starts': [('categorical_to_numerical',
        54)],
                                'first-line': 85L,
                                'folded-linenos': [],
                                'sel-line': 72L,
                                'sel-line-start': 2667L,
                                'selection_end': 2667L,
                                'selection_start': 2667L})],
        'has-focus': True,
        'locked': False},
        [loc('classification.py'),
         loc('../../../../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx'),
         loc('preprocessing.py')]),
                               'open_files': [u'../../../../../../../../Applications/WingIDE.app/Contents/Resources/resources/doc/en/TOC.idx',
        u'preprocessing.py',
        u'classification.py']},
        'saved_notebook_display': None,
        'split_percents': {0: 0.5},
        'splits': 2,
        'tab_location': 'top',
        'user_data': {}},
                 'saved_notebook_display': None,
                 'split_percents': {0: 0.5},
                 'splits': 2,
                 'tab_location': 'left',
                 'user_data': {}},
        'window-alloc': (-32,
                         134,
                         1654,
                         1023)}]}
guimgr.recent-documents = [loc('classification.py'),
                           loc('preprocessing.py')]
proj.build-cmd = {None: ('default',
                         None)}
proj.env-vars = {None: ('default',
                        [u''])}
proj.vcs-system-config = ('prefs',
                          {'bzr': {'versioncontrol.bzr.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.bzr.executable': u'bzr'},
                           'cvs': {'versioncontrol.cvs.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.cvs.executable': u'cvs',
                                   'versioncontrol.cvs.extra-global-args': '-'\
        'z3'},
                           'git': {'versioncontrol.git.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.git.executable': u'git',
                                   'versioncontrol.git.use-porcelain': True},
                           'hg': {'versioncontrol.hg.active': 'active-if-pro'\
        'ject-dir',
                                  'versioncontrol.hg.dont-find-unregistered': True,
                                  'versioncontrol.hg.executable': u'hg',
                                  'versioncontrol.hg.extra-global-args': '--'\
        'encoding=utf8'},
                           'perforce': {'versioncontrol.perforce.active': 'n'\
        'ot-active',
        'versioncontrol.perforce.dont-find-unregistered': True,
        'versioncontrol.perforce.executable': u'p4',
        'versioncontrol.perforce.extra-global-args': ''},
                           'svn': {'versioncontrol.svn.active': 'active-if-p'\
        'roject-dir',
                                   'versioncontrol.svn.executable': u'svn',
                                   'versioncontrol.svn.extra-global-args': '',
                                   'versioncontrol.svn.svnadmin-executable': u'svnadmin'}})
testing.stored-results = (1,
                          [],
                          {})
